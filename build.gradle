buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE")
    }
}

plugins {
    id "com.moowork.node" version "0.11"
}

apply plugin: 'java'
apply plugin: 'spring-boot'

jar {
    baseName = 'monitoring'
    version =  '0.2.0-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

// configuration for the devtools
configurations {
    dev
}
bootRun {
    // Use Spring Boot DevTool only when we run Gradle bootRun task
    classpath = sourceSets.main.runtimeClasspath + configurations.dev
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-devtools")
}

compileJava { exclude "**.js" }


apply plugin: 'base'
version '0.0.1'

buildDir = 'dist'

node {
  version = '5.2.0'
  npmVersion = '3.3.12'
  download = true
}

task bundle(type: NpmTask) {
  inputs.dir(new File('assets'))
  inputs.dir(new File('src'))
  outputs.dir(new File('dist'))
  args = ['run', 'bundle']
}

task start(type: NpmTask) {
  args = ['start']
}

// TODO: skip testing until I figure how to write tests
// task test(type: NpmTask) {
//     args = ['test']
// }

check.dependsOn(test)
bundle.dependsOn(npm_install)

// TODO: do not build frontend; it makes the dev build crazy
// assemble.dependsOn(bundle)